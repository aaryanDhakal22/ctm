import subprocess
from .test_creator import test_case_creator
from .output_test import output_tester

SRC_FILE = "user/assignment01p1.cpp"  # The user coded source file
STDOUT_FILE = "temp/user_outputs/"  # The output file generated by the user
TESTDATA_FILE = "tests/a_test01p1.json"  # The testfile for the source files
BUILD_FILE = "build/result"  # The compiled program


def main():

    test_files, std_output_files = test_case_creator(test_file=TESTDATA_FILE)
    user_output_files = []
    # Builds and runs the file
    subprocess.run(["g++", SRC_FILE, "-o", BUILD_FILE])

    for counter, file in enumerate(test_files):
        I_file = open(file, "r")
        file_name = "temp/user_outputs/user_output" + str(counter + 1)
        O_file = open(file_name, "w")

        subprocess.run(["build/result"], stdin=I_file, stdout=O_file)

        O_file.close()

        I_file.close()
        user_output_files.append(file_name)

    # Checking the result
    result = output_tester(user_output_files)
    print(result)
    # Clean up temp files
    rm = ["rm"] + user_output_files + std_output_files + test_files
    subprocess.run(rm)
